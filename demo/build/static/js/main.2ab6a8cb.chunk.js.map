{"version":3,"sources":["components/exchange-rate/ExchangeRate.jsx","components/option-select/OptionSelect.jsx","components/plan-list/PlanList.jsx","plan-board/planBoardConst.js","plan-board/PlanBoard.jsx","App.js","index.js"],"names":["ExchangeRate","forex","useContext","ForexContext","className","RUB","value","toFixed","USD","Task","tast","setTast","placeholder","onChange","e","console","log","target","Price","price","setPrice","type","CurrencySelect","currencyType","setCurrencyType","required","disabled","defaultValue","Object","keys","map","item","index","OptionSelect","addPlan","useState","onClick","done","PlanItem","noBorderTop","id","changeStatus","RMB","name","checked","htmlFor","PlanList","itemList","descObj","plan","title","total","complete","stillInPlan","filterItemList","filter","totalRMB","reduce","rmbTotal","length","style","width","marginRight","PlanBoardStatus","React","createContext","PlanBoard","setForex","planList","setPlanList","useEffect","a","axios","result","data","changeItem","newPlantList","Provider","planInfo","alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ab6a8cb.chunk.js","sourcesContent":["import './ExchangeRate.css'\r\nimport React, {useContext } from 'react';\r\nimport {ForexContext} from '../../plan-board/PlanBoard'\r\n\r\n\r\nexport default function ExchangeRate(){\r\n    const forex =useContext(ForexContext);\r\n    return (\r\n        <div className=\"rate-container\">\r\n            <span>{(forex.RUB.value).toFixed(4)} ₽/￥</span>\r\n            <span>{(forex.RUB.value/forex.USD.value).toFixed(4)} ₽/$</span>\r\n            <span>{(1/forex.USD.value).toFixed(4)} ￥/$</span>\r\n        </div>\r\n    )\r\n}","import './OptionSelect.css';\r\nimport React, {useContext,useState } from 'react';\r\nimport {ForexContext} from '../../plan-board/PlanBoard'\r\nfunction Task({tast,setTast}){\r\n    return (\r\n        <input className=\"task-input\" placeholder=\"任务\" value={tast}\r\n        onChange={(e)=>{\r\n            console.log(e)\r\n            setTast(e.target.value)}}\r\n        ></input>\r\n    )\r\n}\r\n\r\nfunction Price({price,setPrice}){\r\n    return (\r\n        <input type=\"number\" className=\"price-input\" placeholder=\"价格\" value={price}\r\n        onChange={(e)=>{setPrice(e.target.value)}}>\r\n        </input>\r\n    )\r\n}\r\n\r\nfunction CurrencySelect({currencyType,setCurrencyType}){\r\n    const forex =useContext(ForexContext);\r\n    return (\r\n        <select className=\"curency-select\" required value={currencyType} onChange={(e)=>{setCurrencyType(e.target.value)}}>\r\n            <option value=\"\" disabled defaultValue>货币类型</option>\r\n            {Object.keys(forex).map((item,index)=>{return <option key={index} value={item}>{item}</option>})}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default function OptionSelect({addPlan}){\r\n    const [tast,setTast] = useState('');\r\n    const [price,setPrice] = useState(0);\r\n    const [currencyType,setCurrencyType] = useState('');\r\n    return (\r\n        <div className=\"option-container\">\r\n            <Task tast={tast} setTast={setTast}></Task>\r\n            <Price price={price} setPrice={setPrice}></Price>\r\n            <CurrencySelect currencyType={currencyType} setCurrencyType={setCurrencyType}></CurrencySelect>\r\n            <button className=\"add-button\" onClick={()=>{\r\n                setTast('');\r\n                setPrice(0);\r\n                setCurrencyType('');\r\n                addPlan({tast,price,currencyType,done:false})\r\n            }}>添加</button>\r\n        </div>\r\n                );\r\n}","import {ForexContext} from '../../plan-board/PlanBoard'\r\nimport './PlanList.css'\r\nimport React, { useContext } from 'react';\r\n\r\nfunction PlanItem({noBorderTop,id,item,changeStatus}){\r\n\r\n    const forex =useContext(ForexContext);\r\n    const RMB = 1/forex[item.currencyType].value*item.price\r\n    return (\r\n        <div className={`plan-item-container ${noBorderTop===true ? 'no-border-top': ''}`}>\r\n            <div className=\"plan-name-tag\">\r\n            <input id={id} name=\"plan-name\" type=\"checkbox\" value={item.done} checked={item.done} onClick={()=>{\r\n                changeStatus(item)\r\n            }}></input>\r\n            <label htmlFor={id}>{item.tast}</label>\r\n            </div>\r\n            <span>P{(RMB/forex.RUB.value).toFixed(4)}</span>\r\n            <span>￥{RMB.toFixed(4)}</span>\r\n            <span>${(RMB/forex.USD.value).toFixed(4)}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default function PlanList({type,itemList,changeStatus}) {\r\n    const forex =useContext(ForexContext);\r\n    const descObj = {\r\n        plan:{title:'计划:',total:'将要花费:'},\r\n        complete:{title:'已完成:',total:'一共花了:'}\r\n    }\r\n    const stillInPlan = type==='plan'?false:true;\r\n    const filterItemList = itemList.filter(item=>{return item.done===stillInPlan});\r\n    const {title,total} = descObj[type]||descObj.plan;\r\n    const totalRMB = filterItemList.reduce((rmbTotal,item)=>{\r\n        return rmbTotal+(1/forex[item.currencyType].value*item.price);\r\n    },0)\r\n    return (\r\n        <div className=\"plan-list-container\">\r\n        <span>{title}</span>\r\n        {\r\n        filterItemList.map((item,index)=>{\r\n            return <PlanItem \r\n            key={index} \r\n            noBorderTop={filterItemList.length>1&&index>0} \r\n            id={`${title}-${index}`}\r\n            item={item}\r\n            changeStatus={changeStatus}\r\n            ></PlanItem>\r\n        })\r\n        }\r\n        <div className=\"total-container\">\r\n            <span style={{width: '50%'}}>{total}</span>\r\n            <span>P{(totalRMB/forex.RUB.value).toFixed(4)}</span>\r\n            <span>￥{totalRMB.toFixed(4)}</span>\r\n            <span style={{marginRight: '2%'}}>${(totalRMB/forex.USD.value).toFixed(4)}</span>\r\n        </div>\r\n        </div>\r\n    )\r\n}","export const PlanBoardStatus = {\r\n    selectedType: 'USD',\r\n    forex: {\r\n        \"USD\": {\r\n            \"value\": 0.1520248078866076, // 人民币 => USD\r\n            \"previous\": 0.15222544878563884,\r\n            \"date\": \"2020-11-25T11:30:00+03:00\"\r\n        },\r\n        \"RUB\": {\r\n            \"value\": 11.5257, // 人民币 => RUB\r\n            \"previous\": 11.5326,\r\n            \"date\": \"2020-11-25T11:30:00+03:00\"\r\n        }\r\n    },\r\n    Planning: [{ tast: '打麻将', price: 5, currencyType: 'USD', done: false }],\r\n}","import './PlanBoard.css';\r\nimport ExchangeRate from '../components/exchange-rate/ExchangeRate';\r\nimport OptionSelect from '../components/option-select/OptionSelect';\r\nimport PlanList from '../components/plan-list/PlanList';\r\nimport React, { useState, useEffect,useMemo } from 'react';\r\nimport axios from 'axios';\r\nimport {PlanBoardStatus} from './planBoardConst'\r\nexport const ForexContext = React.createContext(PlanBoardStatus.forex);\r\nexport default function PlanBoard() {\r\n    const [forex, setForex] = useState(PlanBoardStatus.forex );\r\n    const [planList,setPlanList] = useState(PlanBoardStatus.Planning)\r\n    useEffect(async () => {\r\n        const result = await axios(\r\n          'https://api.globus.furniture/forex',\r\n        );\r\n        setForex(result.data);\r\n      },[])\r\n    const addPlan = (planInfo)=>{\r\n      if(planInfo.tast===''||planInfo.currencyType===''){\r\n      alert('not allow empty selected');\r\n    } else {\r\n      setPlanList([...planList,planInfo])\r\n    }\r\n    }\r\n    const changeStatus=(changeItem)=>{\r\n      const newPlantList = planList.map(item=>{\r\n        if(item.tast===changeItem.tast){\r\n          item.done = !item.done;\r\n        }\r\n        return item;\r\n      })\r\n      setPlanList(newPlantList)\r\n    }\r\n    return (\r\n        <div className=\"plan-board-container\">\r\n            <ForexContext.Provider value ={forex}>\r\n            <OptionSelect addPlan={addPlan}></OptionSelect>\r\n            <ExchangeRate></ExchangeRate>\r\n            <PlanList type=\"plan\" itemList={planList} changeStatus={changeStatus}></PlanList>\r\n            <PlanList type=\"complete\" itemList={planList} changeStatus={changeStatus}></PlanList>\r\n            </ForexContext.Provider>\r\n        </div>\r\n            );\r\n}","import PlanBoard from './plan-board/PlanBoard'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PlanBoard></PlanBoard>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}